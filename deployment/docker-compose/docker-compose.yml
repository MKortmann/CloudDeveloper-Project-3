
# config data for the compose
version: '3.3'

services:
  # udagram api for feed
  # container name:
  udagram-api-feed:
    # image where the container comes from
    image: mkortmann/udagram-api-feed
    # for data persistence: HOST VOLUMES: so we get our credentials  (: work as separation)
    # host volume:container volume
    volumes:
      - $HOME/.aws:/root/.aws
    environment:
      POSTGRES_USERNAME=$POSTGRES_USERNAME
      POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      POSTGRES_HOST=$POSTGRES_HOST
      POSTGRES_DATABASE=$POSTGRES_DATABASE
      AWS_MEDIA_BUCKET=$AWS_MEDIA_BUCKET
      AWS_REGION=$AWS_REGION
      AWS_PROFILE=$AWS_PROFILE
      JWT_SECRET=$JWT_SECRET
      URL=$URL
  # udagram api for users
  udagram-api-users:
    image: mkortmann/udagram-api-feed
    volumes:
      - $HOME/.aws:/root/.aws
    environment:
      POSTGRES_USERNAME=$POSTGRES_USERNAME
      POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      POSTGRES_HOST=$POSTGRES_HOST
      POSTGRES_DATABASE=$POSTGRES_DATABASE
      AWS_MEDIA_BUCKET=$AWS_MEDIA_BUCKET
      AWS_REGION=$AWS_REGION
      AWS_PROFILE=$AWS_PROFILE
      JWT_SECRET=$JWT_SECRET
      URL=$URL
  # udagram-ionic frontend
  udagram-frontend:
    image: mkortmann/udagram-frontend
    # localhost:ContainerPort
    ports:
      - "8100:80"
  # reversy proxy: proxies requests to internal services
  udagram-reverseproxy:
    image: mkortmann/udagram-reversyproxy
    ports:
      - 8080:8080
    # at same network, so we need to specify only the container names
    depends_on:
      - udagram-api-feed
      - udagram-api-users




